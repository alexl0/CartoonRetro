<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="D:/git/CartoonRetro/cartoonretro/videodata.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1031"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainsqlite_sequence"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="episodes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="52"/><column index="2" value="124"/><column index="3" value="133"/><column index="4" value="300"/><column index="5" value="184"/><column index="6" value="300"/><column index="7" value="53"/><column index="8" value="58"/><column index="9" value="120"/><column index="10" value="106"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="schedule" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="86"/><column index="3" value="110"/><column index="4" value="90"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="series" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="184"/><column index="2" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="57"/><column index="2" value="50"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE IF NOT EXISTS schedule (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    episode_id INT,
    play_datetime DATETIME,
    FOREIGN KEY (episode_id) REFERENCES episodes(id)
);

/*Ver cuanto dura en horas cada serie en total*/
SELECT SUM(duration_seconds)/60/60 AS total_duration_hours, name_of_serie
FROM episodes group by name_of_serie;

/*Ver cuanto dura de media un episodio de cada serie*/
SELECT AVG(duration_seconds)/60 AS average_duration_mins, name_of_serie
FROM episodes group by name_of_serie;

/*Suma de las duraciones anteriores. Es decir, cuantas horas duraría reproducirlos*/
SELECT SUM(average_duration_mins)/60 AS suma_de_duraciones_horas
FROM (
    SELECT AVG(duration_seconds)/60 AS average_duration_mins
    FROM episodes
    GROUP BY name_of_serie
) AS subquery;

/*Ver cuanta es la máxima diferencia en minutos entre el episodio más largo y el más corto de cada serie*/
SELECT
    name_of_serie,
    (MAX(duration_seconds) - MIN(duration_seconds))/60 AS max_duration_difference_minutes
FROM
    episodes
GROUP BY
    name_of_serie;


delete from episodes where name_of_episode='Opening';

delete from episodes where name_of_serie='Medabots';
delete from series where name_of_serie='Digimon';

SELECT file_name, COUNT(*) AS count
FROM episodes
GROUP BY file_name
HAVING count &gt; 1;

delete from episodes;
delete from series;</sql><current_tab id="0"/></tab_sql></sqlb_project>
